## customize vcs_info
zstyle ':vcs_info:git*:*' check-for-changes true
zstyle ':vcs_info:git*:*' unstagedstr '|☂'
zstyle ':vcs_info:git*:*' stagedstr '|≠'

# enable hooks, requires Zsh >=4.3.11
if [[ $ZSH_VERSION == 4.3.<11->* || $ZSH_VERSION == 4.<4->* || $ZSH_VERSION == <5->* ]] ; then
  # hook for untracked files
  +vi-untracked() {
    if [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) == 'true'  ]] && \
       [[ -n $(git ls-files --others --exclude-standard) ]] ; then
       hook_com[staged]+='|☂'
    fi
  }

  # unpushed commits?
  +vi-outgoing() {
    branch="$(cat .git/HEAD 2>/dev/null)"
    branch=${branch##*/heads/}
    count=$(git rev-list remotes/origin/${branch}.. 2>/dev/null | wc -l)
    if [[ "$count" -gt 0 ]] ; then
      hook_com[staged]+="|↑$count"
    fi
    unset branch count
  }

  zstyle ':vcs_info:git*+set-message:*' hooks stashed untracked outgoing
fi

# required for *formats in vcs_info, see below
BLUE="%{${fg[blue]}%}"
RED="%{${fg_bold[red]}%}"
GREEN="%{${fg[green]}%}"
CYAN="%{${fg[cyan]}%}"
MAGENTA="%{${fg[magenta]}%}"
YELLOW="%{${fg[yellow]}%}"
WHITE="%{${fg[white]}%}"
NO_COLOUR="%{${reset_color}%}"

# extend default vcs_info in prompt
zstyle ':vcs_info:*' actionformats "${MAGENTA}(${NO_COLOUR}%s${MAGENTA})${YELLOW}-${MAGENTA}[${GREEN}%b${YELLOW}|${RED}%a%u%c${MAGENTA}]${NO_COLOUR} " "zsh: %r"
zstyle ':vcs_info:*' formats       "${MAGENTA}(${NO_COLOUR}%s${MAGENTA})${YELLOW}-${MAGENTA}[${GREEN}%b%u%c${MAGENTA}]${NO_COLOUR}%} " "zsh: %r"

function virtual_env_prompt () {
    REPLY=${VIRTUAL_ENV+(🐍${VIRTUAL_ENV:t}) }
}
grml_theme_add_token virtual-env -f virtual_env_prompt '%F{magenta}' '%f'

# the printf generates a "red modifier"
# https://jmtd.net/log/multi-coloured_fedoras/
function rbenv_prompt () {
  REPLY=${RBENV_VERSION+(💎$(printf '\xef\xb8\x8e')${RBENV_VERSION:t}) }
}
grml_theme_add_token rbenv -f rbenv_prompt '%F{red}' '%f'

if command -v rbenv >/dev/null; then
  eval "$(rbenv init - zsh)"
fi

zstyle ':prompt:grml:left:setup' items rc virtual-env rbenv change-root user at host remote path vcs percent

PROMPT="%{%B${YELLOW}%}%T ${RED}${EXITCODE}${WHITE}${debian_chroot:+($debian_chroot)}${GREEN}%n${GREEN}@%m${NO_COLOUR} %40<...<%B%~%b%<< "'${vcs_info_msg_0_}'"%# "

# https://docs.python-guide.org/dev/pip-virtualenv/
export PIP_REQUIRE_VIRTUALENV=true

export GRML_NO_APT_ALIASES=1

if [ -z "$SSH_AUTH_SOCK" ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi

autoload -U bashcompinit
bashcompinit
